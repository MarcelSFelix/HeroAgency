{"ast":null,"code":"import { PopupComponent } from '../popup/popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class AuthGuardService {\n  constructor(auth, dialog) {\n    this.auth = auth;\n    this.dialog = dialog;\n  }\n  canActivate(next, state) {\n    if (!localStorage.getItem('currentUser')) {\n      const dialogRef = this.dialog.open(PopupComponent, {\n        disableClose: true,\n        autoFocus: true\n      });\n      return dialogRef.afterClosed().pipe(map(result => {\n        if (result) {\n          return true;\n        } else {\n          this.router.navigate(['/']);\n          return false;\n        }\n      }));\n    }\n    return true;\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.MatDialog));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});","map":{"version":3,"mappings":"AAOA,SAASA,cAAc,QAAQ,0BAA0B;;;;AAGzD,OAAM,MAAOC,gBAAgB;EAC3BC,YAAmBC,IAAiB,EAAUC,MAAiB;IAA5C,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAc;EAElEC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;MACxC,MAAMC,SAAS,GAAG,IAAI,CAACN,MAAM,CAACO,IAAI,CAACX,cAAc,EAAE;QACjDY,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE;OACZ,CAAC;MAEF,OAAOH,SAAS,CAACI,WAAW,EAAE,CAACC,IAAI,CACjCC,GAAG,CAACC,MAAM,IAAG;QACX,IAAIA,MAAM,EAAE;UACV,OAAO,IAAI;SACZ,MAAM;UACL,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;UAC3B,OAAO,KAAK;;MAEhB,CAAC,CAAC,CACH;;IAGH,OAAO,IAAI;EACb;;AA1BWlB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAmB,SAAhBnB,gBAAgB;AAAA","names":["PopupComponent","AuthGuardService","constructor","auth","dialog","canActivate","next","state","localStorage","getItem","dialogRef","open","disableClose","autoFocus","afterClosed","pipe","map","result","router","navigate","factory"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport { PopupComponent } from '../popup/popup.component';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, private dialog: MatDialog) {}\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (!localStorage.getItem('currentUser')) {\n      const dialogRef = this.dialog.open(PopupComponent, {\n        disableClose: true,\n        autoFocus: true\n      });\n\n      return dialogRef.afterClosed().pipe(\n        map(result => {\n          if (result) {\n            return true;\n          } else {\n            this.router.navigate(['/']);\n            return false;\n          }\n        })\n      );\n    }\n\n    return true;\n  }\n  /*\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n\n        dialogConfig.data = {\n          id: 1,\n          title: 'Angular For Beginners'\n        };\n\n        const dialogRef = this.dialog.open(PopupComponent, dialogConfig);\n\n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n        });\n  }\n  */\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}