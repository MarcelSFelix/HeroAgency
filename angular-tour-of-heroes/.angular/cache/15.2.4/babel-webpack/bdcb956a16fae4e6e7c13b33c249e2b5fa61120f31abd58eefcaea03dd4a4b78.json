{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:8080/login/';\n    this.username = '';\n    this.password = '';\n  }\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated() {\n    return this.http.get(this.loginUrl).toPromise().then(response => true).catch(error => {\n      console.error('Error occurred while checking authentication:', error);\n      return false;\n    });\n  }\n  // Logs user in by setting 'currentUser' to 'true'\n  login(username, password) {\n    const loginData = {\n      username: username,\n      password: password\n    };\n    return this.http.post(this.loginUrl, loginData);\n  }\n  // Remove currentUser from localStorage to log out\n  logout() {\n    sessionStorage.removeItem('currentUser');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAG,8BAA8B;IAIjD,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHkB;EAKvC;EACA;EACOC,eAAe;IACpB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,EAAE,CACrDC,IAAI,CAACC,QAAQ,IAAI,IAAI,CAAC,CACtBC,KAAK,CAACC,KAAK,IAAG;MACbC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrE,OAAO,KAAK;IACd,CAAC,CAAC;EACN;EAEA;EACAE,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,SAAS,GAAG;MAAEF,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEA;IAAQ,CAAE;IAC5D,OAAO,IAAI,CAACZ,IAAI,CAACc,IAAI,CAAC,IAAI,CAACX,QAAQ,EAAEU,SAAS,CAAC;EACjD;EAEA;EACAE,MAAM;IACJC,cAAc,CAACC,UAAU,CAAC,aAAa,CAAC;EAC1C;;AA5BWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["AuthService","constructor","http","isAuthenticated","get","loginUrl","toPromise","then","response","catch","error","console","login","username","password","loginData","post","logout","sessionStorage","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\HeroAgency\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  private loginUrl = 'http://localhost:8080/login/'\n  \n  constructor(private http: HttpClient) {} \n\n  username: string = '';\n  password: string = '';\n\n  // Check whether the user is logged in and return\n  // true or false\n  public isAuthenticated(): Promise<boolean> {\n    return this.http.get<boolean>(this.loginUrl).toPromise()\n      .then(response => true)\n      .catch(error => {\n        console.error('Error occurred while checking authentication:', error);\n        return false;\n      });\n  }\n  \n  // Logs user in by setting 'currentUser' to 'true'\n  login(username: string, password: string) {\n    const loginData = { username: username, password: password };\n    return this.http.post(this.loginUrl, loginData);\n  }\n\n  // Remove currentUser from localStorage to log out\n  logout(): void {\n    sessionStorage.removeItem('currentUser');\n  }\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}