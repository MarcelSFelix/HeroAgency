{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.mainUrl = 'http://localhost:8080';\n    this.username = '';\n    this.password = '';\n  }\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated() {\n    return this.http.get('/is-authenticated');\n  }\n  // Logs user in by setting 'currentUser' to 'true'\n  login(username, password) {\n    const loginUrl = this.mainUrl + '/login/';\n    const loginData = {\n      username: username,\n      password: password\n    };\n    return this.http.post(loginUrl, loginData);\n  }\n  // Remove currentUser from localStorage to log out\n  logout() {\n    console.log(logoutUrl);\n    const logoutUrl = this.mainUrl + '/logout/';\n    return this.http.post(logoutUrl, null);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,uBAAuB;IAIzC,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHkB;EAKvC;EACA;EACAC,eAAe;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,mBAAmB,CAAC;EACpD;EAEA;EACAC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,QAAQ,GAAG,IAAI,CAACC,OAAO,GAAG,SAAS;IACzC,MAAMC,SAAS,GAAG;MAAEJ,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEA;IAAQ,CAAE;IAC5D,OAAO,IAAI,CAACL,IAAI,CAACS,IAAI,CAACH,QAAQ,EAAEE,SAAS,CAAC;EAC5C;EAEA;EACAE,MAAM;IACJC,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;IACtB,MAAMA,SAAS,GAAG,IAAI,CAACN,OAAO,GAAG,UAAU;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACS,IAAI,CAACI,SAAS,EAAE,IAAI,CAAC;EAC1C;;AA1Baf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["AuthService","constructor","http","isAuthenticated","get","login","username","password","loginUrl","mainUrl","loginData","post","logout","console","log","logoutUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\HeroAgency\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  private mainUrl = 'http://localhost:8080'\n  \n  constructor(private http: HttpClient) {} \n\n  username: string = '';\n  password: string = '';\n\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated(): Observable<boolean> {\n    return this.http.get<boolean>('/is-authenticated');\n  }\n  \n  // Logs user in by setting 'currentUser' to 'true'\n  login(username: string, password: string) {\n    const loginUrl = this.mainUrl + '/login/'\n    const loginData = { username: username, password: password };\n    return this.http.post(loginUrl, loginData);\n  }\n\n  // Remove currentUser from localStorage to log out\n  logout(): Observable<any> {\n    console.log(logoutUrl)\n    const logoutUrl = this.mainUrl + '/logout/'\n    return this.http.post(logoutUrl, null);\n}\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}