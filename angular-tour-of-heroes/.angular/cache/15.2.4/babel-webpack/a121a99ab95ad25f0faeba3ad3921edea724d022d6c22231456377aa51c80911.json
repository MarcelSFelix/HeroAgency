{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/angular-jwt\";\nexport class AuthService {\n  constructor(jwtHelper) {\n    this.jwtHelper = jwtHelper;\n  }\n  isAuthenticated() {\n    // Check whether the user is logged in and return\n    // true or false\n    const user = localStorage.getItem('currentUser');\n    return user === 'true';\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.JwtHelperService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nlogout();\n{\n  // Remove currentUser from localStorage to log out\n  // Afterwards redirect to login\n  localStorage.removeItem('currentUser');\n  this.router.navigate(['/login']);\n}","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,WAAW;EAEtBC,YAAmBC,SAA2B;IAA3B,cAAS,GAATA,SAAS;EAAqB;EAE1CC,eAAe;IACpB;IACA;IACA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,OAAOF,IAAI,KAAK,MAAM;EACxB;;AATWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAO,SAAXP,WAAW;EAAAQ,YADE;AAAM;AAY9BC,MAAM,EAAE;AAAC;EACP;EACA;EACAJ,YAAY,CAACK,UAAU,CAAC,aAAa,CAAC;EACtC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC","names":["AuthService","constructor","jwtHelper","isAuthenticated","user","localStorage","getItem","factory","providedIn","logout","removeItem","router","navigate"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({ providedIn: 'root'})\nexport class AuthService {  \n  \n  constructor(public jwtHelper: JwtHelperService) {} \n\n  public isAuthenticated(): boolean {\n    // Check whether the user is logged in and return\n    // true or false\n    const user = localStorage.getItem('currentUser');\n    return user === 'true'\n  }}\n\n  logout() {\n    // Remove currentUser from localStorage to log out\n    // Afterwards redirect to login\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}