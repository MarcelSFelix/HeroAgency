{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/account.service\";\nexport class LoginComponent {\n  constructor(formBuilder, route, router, accountService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.username = '';\n    this.password = '';\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    localStorage.setItem('currentUser', 'false');\n    // Check if the username and password are correct\n    if (this.username === 'admin' && this.password === 'password') {\n      // Set the user as authenticated\n      localStorage.setItem('currentUser', 'true');\n      // Navigate to the requested page\n      const requestedUrl = localStorage.getItem('requestedUrl') || '/';\n      this.router.navigateByUrl(requestedUrl);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[3, \"submit\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"button\", 3);\n      i0.ɵɵtext(12, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,cAAc;EAOzBC,YACUC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAH9B,gBAAW,GAAXH,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IAPxB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAQjB;EAEJC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACrC,CAAC;EACJ;EAEA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAAE;EAErCC,QAAQ;IAENC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC;IAE5C;IACA,IAAI,IAAI,CAACP,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACE,QAAQ,KAAK,UAAU,EAAE;MAC7D;MACAI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;MAC3C;MACA,MAAMC,YAAY,GAAGF,YAAY,CAACG,OAAO,CAAC,cAAc,CAAC,IAAI,GAAG;MAChE,IAAI,CAACd,MAAM,CAACe,aAAa,CAACF,YAAY,CAAC;KACxC,MAAM;MACLG,KAAK,CAAC,mCAAmC,CAAC;;EAE9C;;AAtCWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,+BAA4B;MAAtBA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACzBD,2BAAK;MACIA,yBAAS;MAAAA,iBAAQ;MACxBA,gCAAmE;MAAhDA;QAAA;MAAA,EAAsB;MAAzCA,iBAAmE;MAErEA,2BAAK;MACIA,yBAAS;MAAAA,iBAAQ;MACxBA,iCAAuE;MAAhDA;QAAA;MAAA,EAAsB;MAA7CA,iBAAuE;MAEzEA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;;;MANfA,eAAsB;MAAtBA,sCAAsB;MAIlBA,eAAsB;MAAtBA,sCAAsB","names":["Validators","LoginComponent","constructor","formBuilder","route","router","accountService","ngOnInit","form","group","username","required","password","f","controls","onSubmit","localStorage","setItem","requestedUrl","getItem","navigateByUrl","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.ts","C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form!: FormGroup; \n\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private accountService: AccountService,\n    // private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n\n    localStorage.setItem('currentUser', 'false')\n    \n    // Check if the username and password are correct\n    if (this.username === 'admin' && this.password === 'password') {\n      // Set the user as authenticated\n      localStorage.setItem('currentUser', 'true');\n      // Navigate to the requested page\n      const requestedUrl = localStorage.getItem('requestedUrl') || '/';\n      this.router.navigateByUrl(requestedUrl);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n\n}\n","<h2>Login</h2>\n<form (submit)=\"onSubmit()\">\n  <div>\n    <label>Username:</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n  </div>\n  <div>\n    <label>Password:</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n  </div>\n  <button type=\"submit\">Login</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}