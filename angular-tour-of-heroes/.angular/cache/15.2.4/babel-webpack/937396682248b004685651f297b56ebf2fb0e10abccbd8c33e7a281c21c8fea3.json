{"ast":null,"code":"import { MatDialogConfig } from \"@angular/material/dialog\";\nimport { PopupComponent } from '../popup/popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class AuthGuardService {\n  constructor(auth, dialog) {\n    this.auth = auth;\n    this.dialog = dialog;\n  }\n  canActivate() {\n    console.log('entered canActivate()');\n    if (!this.auth.isAuthenticated()) {\n      // To Do return true after dialog closed -> then redirect to requested site\n      this.openDialog();\n      return true;\n    }\n    return true;\n  }\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      id: 1,\n      title: 'Login window'\n    };\n    const dialogRef = this.dialog.open(PopupComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.MatDialog));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});","map":{"version":3,"mappings":"AAIA,SAAmBA,eAAe,QAAO,0BAA0B;AACnE,SAASC,cAAc,QAAQ,0BAA0B;;;;AAGzD,OAAM,MAAOC,gBAAgB;EAC3BC,YAAmBC,IAAiB,EAAUC,MAAiB;IAA5C,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;EAAc;EAElEC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACK,eAAe,EAAE,EAAE;MAChC;MACA,IAAI,CAACC,UAAU,EAAE;MACjB,OAAO,IAAI;;IAEb,OAAO,IAAI;EACb;EAEAA,UAAU;IACR,MAAMC,YAAY,GAAG,IAAIX,eAAe,EAAE;IAEtCW,YAAY,CAACC,YAAY,GAAG,IAAI;IAChCD,YAAY,CAACE,SAAS,GAAG,IAAI;IAE7BF,YAAY,CAACG,IAAI,GAAG;MAClBC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACR;IAED,MAAMC,SAAS,GAAG,IAAI,CAACZ,MAAM,CAACa,IAAI,CAACjB,cAAc,EAAEU,YAAY,CAAC;IAEhEM,SAAS,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCd,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;EACR;;AA7BWN,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAoB,SAAhBpB,gBAAgB;AAAA","names":["MatDialogConfig","PopupComponent","AuthGuardService","constructor","auth","dialog","canActivate","console","log","isAuthenticated","openDialog","dialogConfig","disableClose","autoFocus","data","id","title","dialogRef","open","afterClosed","subscribe","result","factory"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, CanActivateFn } from '@angular/router';\nimport { AuthService } from './auth.service';\n\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport { PopupComponent } from '../popup/popup.component';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, private dialog: MatDialog) {}\n  \n  canActivate(): boolean {\n    console.log('entered canActivate()');\n    if (!this.auth.isAuthenticated()) {\n      // To Do return true after dialog closed -> then redirect to requested site\n      this.openDialog();\n      return true;\n    }\n    return true;\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n\n        dialogConfig.data = {\n          id: 1,\n          title: 'Login window'\n        };\n\n        const dialogRef = this.dialog.open(PopupComponent, dialogConfig);\n\n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n        });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}