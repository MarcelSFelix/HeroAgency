{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.username = '';\n    this.password = '';\n  }\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated() {\n    const user = sessionStorage.getItem('currentUser');\n    return user === 'true';\n  }\n  // Logs user in by setting 'currentUser' to 'true'\n  login(username, password) {\n    const loginUrl = '/login/';\n    return this.htt;\n    // if (username === 'admin' && password === '123') {\n    //   sessionStorage.setItem('currentUser', 'true');\n    //   return true;\n    //   \n    // } else {\n    //   return false;\n    // }\n  }\n  // Remove currentUser from localStorage to log out\n  logout() {\n    sessionStorage.removeItem('currentUser');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAEtBC;IAEA,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHN;EAKf;EACA;EACOC,eAAe;IACpB,MAAMC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IAClD,OAAOF,IAAI,KAAK,MAAM;EACxB;EAEA;EACAG,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,QAAQ,GAAG,SAAS;IAC1B,OAAO,IAAI,CAACC,GAAG;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;EACF;EAEA;EACAC,MAAM;IACJP,cAAc,CAACQ,UAAU,CAAC,aAAa,CAAC;EAC1C;;AA/BWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["AuthService","constructor","isAuthenticated","user","sessionStorage","getItem","login","username","password","loginUrl","htt","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\HeroAgency\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  \n  constructor() {} \n\n  username: string = '';\n  password: string = '';\n\n  // Check whether the user is logged in and return\n  // true or false\n  public isAuthenticated(): boolean {\n    const user = sessionStorage.getItem('currentUser');\n    return user === 'true';\n  }\n  \n  // Logs user in by setting 'currentUser' to 'true'\n  login(username: string, password: string): boolean {\n    const loginUrl = '/login/'\n    return this.htt\n\n    // if (username === 'admin' && password === '123') {\n    //   sessionStorage.setItem('currentUser', 'true');\n    //   return true;\n    //   \n    // } else {\n    //   return false;\n    // }\n  }\n\n  // Remove currentUser from localStorage to log out\n  logout(): void {\n    sessionStorage.removeItem('currentUser');\n  }\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}