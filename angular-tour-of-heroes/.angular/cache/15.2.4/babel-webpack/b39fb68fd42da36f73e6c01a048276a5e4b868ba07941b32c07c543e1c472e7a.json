{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthService = class AuthService {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.username = '';\n    this.password = '';\n  }\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated() {\n    const user = sessionStorage.getItem('currentUser');\n    return user === 'true';\n  }\n  // Logs user in by setting 'currentUser' to 'true'\n  login(username, password) {\n    if (username === 'admin' && password === '123') {\n      sessionStorage.setItem('currentUser', 'true');\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // Remove currentUser from localStorage to log out\n  logout() {\n    sessionStorage.removeItem('currentUser');\n  }\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEtBC,YACUC,MAAc,EACdC,KAAqB;IADrB,WAAM,GAAND,MAAM;IACN,UAAK,GAALC,KAAK;IAEf,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHc;EAKnC;EACA;EACOC,eAAe;IACpB,MAAMC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IAClD,OAAOF,IAAI,KAAK,MAAM;EACxB;EAEA;EACAG,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,KAAK,EAAE;MAC9CJ,cAAc,CAACK,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;MAC7C,OAAO,IAAI;KAEZ,MAAM;MACL,OAAO,KAAK;;EAEhB;EAEA;EACAC,MAAM;IACJN,cAAc,CAACO,UAAU,CAAC,aAAa,CAAC;EAC1C;CAED;AAhCYb,WAAW,eAHvBD,UAAU,CAAC;EACVe,UAAU,EAAE;CACb,CAAC,GACWd,WAAW,CAgCvB;SAhCYA,WAAW","names":["Injectable","AuthService","constructor","router","route","isAuthenticated","user","sessionStorage","getItem","login","username","password","setItem","logout","removeItem","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  \n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,) {} \n\n  username: string = '';\n  password: string = '';\n\n  // Check whether the user is logged in and return\n  // true or false\n  public isAuthenticated(): boolean {\n    const user = sessionStorage.getItem('currentUser');\n    return user === 'true';\n  }\n  \n  // Logs user in by setting 'currentUser' to 'true'\n  login(username: string, password: string): boolean {\n    if (username === 'admin' && password === '123') {\n      sessionStorage.setItem('currentUser', 'true');\n      return true;\n      \n    } else {\n      return false;\n    }\n  }\n\n  // Remove currentUser from localStorage to log out\n  logout(): void {\n    sessionStorage.removeItem('currentUser');\n  }\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}