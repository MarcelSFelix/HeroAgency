{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, route, router,\n  //private accountService: AccountService,\n  alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.accountService.login(this.f.username.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,KAAK,QAAQ,gBAAgB;AAS/B,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YACYC,WAAwB,EACxBC,KAAqB,EACrBC,MAAc;EACtB;EACQC,YAA0B;IAJ1B,gBAAW,GAAXH,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IAEN,iBAAY,GAAZC,YAAY;IARxB,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;EAQb;EAEJC,QAAQ;IACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC/BC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACrC,CAAC;EACN;EAEA;EACA,IAAIE,CAAC;IAAK,OAAO,IAAI,CAACL,IAAI,CAACM,QAAQ;EAAE;EAErCC,QAAQ;IACJ,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB;IACA,IAAI,CAACV,YAAY,CAACW,KAAK,EAAE;IAEzB;IACA,IAAI,IAAI,CAACT,IAAI,CAACU,OAAO,EAAE;MACnB;;IAGJ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,cAAc,CAACC,KAAK,CAAC,IAAI,CAACR,CAAC,CAACH,QAAQ,CAACY,KAAK,EAAE,IAAI,CAACT,CAAC,CAACD,QAAQ,CAACU,KAAK,CAAC,CAClEC,IAAI,CAACvB,KAAK,EAAE,CAAC,CACbwB,SAAS,CAAC;MACPC,IAAI,EAAE,MAAK;QACP;QACA,MAAMC,SAAS,GAAG,IAAI,CAACtB,KAAK,CAACuB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;QACrE,IAAI,CAACvB,MAAM,CAACwB,aAAa,CAACH,SAAS,CAAC;MACxC,CAAC;MACDI,KAAK,EAAEA,KAAK,IAAG;QACX,IAAI,CAACxB,YAAY,CAACwB,KAAK,CAACA,KAAK,CAAC;QAC9B,IAAI,CAACX,OAAO,GAAG,KAAK;MACxB;KACH,CAAC;EACV;CACD;AAjDYlB,cAAc,eAL1BH,SAAS,CAAC;EACTiC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWhC,cAAc,CAiD1B;SAjDYA,cAAc","names":["Component","Validators","first","LoginComponent","constructor","formBuilder","route","router","alertService","ngOnInit","form","group","username","required","password","f","controls","onSubmit","submitted","clear","invalid","loading","accountService","login","value","pipe","subscribe","next","returnUrl","snapshot","queryParams","navigateByUrl","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form!: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      //private accountService: AccountService,\n      private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n      this.form = this.formBuilder.group({\n          username: ['', Validators.required],\n          password: ['', Validators.required]\n      });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // reset alerts on submit\n      this.alertService.clear();\n\n      // stop here if form is invalid\n      if (this.form.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      this.accountService.login(this.f.username.value, this.f.password.value)\n          .pipe(first())\n          .subscribe({\n              next: () => {\n                  // get return url from query parameters or default to home page\n                  const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n                  this.router.navigateByUrl(returnUrl);\n              },\n              error: error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              }\n          });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}