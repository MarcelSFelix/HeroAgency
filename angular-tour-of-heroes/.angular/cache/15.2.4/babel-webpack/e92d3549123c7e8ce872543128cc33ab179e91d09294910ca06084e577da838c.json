{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class AccountService {\n  constructor() {\n    this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n  }\n  get userValue() {\n    return this.userSubject.value;\n  }\n  login(username, password) {\n    return this.http.post(`${environment.apiUrl}/users/authenticate`, {\n      username,\n      password\n    }).pipe(map(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n      this.userSubject.next(user);\n      return user;\n    }));\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)();\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;;AASpC,OAAM,MAAOC,cAAc;EAIzBC;IAAgB,IAAI,CAACC,WAAW,GAAG,IAAIJ,eAAe,CAACK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;EAAE;EAEnG,IAAWC,SAAS;IAClB,OAAO,IAAI,CAACL,WAAW,CAACM,KAAK;EAC/B;EAEAC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAO,GAAGC,WAAW,CAACC,MAAM,qBAAqB,EAAE;MAAEL,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAC1FK,IAAI,CAACjB,GAAG,CAACkB,IAAI,IAAG;MACb;MACAZ,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEf,IAAI,CAACgB,SAAS,CAACF,IAAI,CAAC,CAAC;MAClD,IAAI,CAACf,WAAW,CAACkB,IAAI,CAACH,IAAI,CAAC;MAC3B,OAAOA,IAAI;IACf,CAAC,CAAC,CAAC;EACX;;AAlBajB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAqB,SAAdrB,cAAc;EAAAsB,YAFb;AAAM","names":["BehaviorSubject","map","AccountService","constructor","userSubject","JSON","parse","localStorage","getItem","userValue","value","login","username","password","http","post","environment","apiUrl","pipe","user","setItem","stringify","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\_services\\account.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// import { environment } from '@environments/environment';\nimport { User } from '../user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  private userSubject: BehaviorSubject<User | null>;\n\n  constructor() { this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')!)); }\n\n  public get userValue() {\n    return this.userSubject.value;\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<User>(`${environment.apiUrl}/users/authenticate`, { username, password })\n        .pipe(map(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('user', JSON.stringify(user));\n            this.userSubject.next(user);\n            return user;\n        }));\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}