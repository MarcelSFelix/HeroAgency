{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  // Check whether the user is logged in and return\n  // true or false\n  isAuthenticated() {\n    const user = localStorage.getItem('currentUser');\n    console.log();\n    return user === 'true';\n  }\n  // Logs user in by settung 'currentUser' to 'true'\n  login() {\n    localStorage.setItem('currentUser', 'true');\n  }\n  // Remove currentUser from localStorage to log out\n  // Afterwards redirect to login\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigateByUrl('login');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAE1B,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHgB;EAKrC;EACA;EACOC,eAAe;IACpB,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChDC,OAAO,CAACC,GAAG,EAAE;IACb,OAAQJ,IAAI,KAAK,MAAM;EACzB;EAEA;EACAK,KAAK;IACHJ,YAAY,CAACK,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;EAC3C;EAGF;EACA;EACAC,MAAM;IACJN,YAAY,CAACO,UAAU,CAAC,aAAa,CAAC;IACtC,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,OAAO,CAAC;EACtC;;AA1Bab,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["AuthService","constructor","router","isAuthenticated","user","localStorage","getItem","console","log","login","setItem","logout","removeItem","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  \n  constructor(private router: Router) {} \n\n  username: string = '';\n  password: string = '';\n\n  // Check whether the user is logged in and return\n  // true or false\n  public isAuthenticated(): boolean {\n    const user = localStorage.getItem('currentUser');\n    console.log()\n    return (user === 'true');\n  }\n  \n  // Logs user in by settung 'currentUser' to 'true'\n  login() {\n    localStorage.setItem('currentUser', 'true');\n    }\n  \n\n  // Remove currentUser from localStorage to log out\n  // Afterwards redirect to login\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigateByUrl('login');\n}\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}