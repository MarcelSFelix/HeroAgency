{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  isAuthenticated() {\n    // Check whether the user is logged in and return\n    // true or false\n    const user = localStorage.getItem('currentUser');\n    return user === 'true';\n  }\n  // Checks against fake credentials and if correct closes window\n  login(requestedUrl) {\n    if (this.username === 'admin' && this.password === '123') {\n      localStorage.setItem('currentUser', 'true');\n      // ToDO Replace DialogRef with simpler way of login\n      this.router.navigate;\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n  // Remove currentUser from localStorage to log out\n  // Afterwards redirect to login\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['login']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAE1B,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAHgB;EAM9BC,eAAe;IACpB;IACA;IACA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,OAAOF,IAAI,KAAK,MAAM;EACxB;EAEA;EACAG,KAAK,CAACC,YAAY;IAChB,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,KAAK,EAAE;MACxDL,YAAY,CAACM,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;MAC3C;MACA,IAAI,CAACT,MAAM,CAACU,QAAQ;KACrB,MAAM;MACLC,KAAK,CAAC,mCAAmC,CAAC;;EAE9C;EAEA;EACA;EACAC,MAAM;IACJT,YAAY,CAACU,UAAU,CAAC,aAAa,CAAC;IACtC,IAAI,CAACb,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACnC;;AA/BaZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgB,SAAXhB,WAAW;EAAAiB,YAFV;AAAM","names":["AuthService","constructor","router","isAuthenticated","user","localStorage","getItem","login","requestedUrl","username","password","setItem","navigate","alert","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class AuthService {  \n  \n  constructor(private router: Router) {} \n\n  username: string = '';\n  password: string = '';\n\n\n  public isAuthenticated(): boolean {\n    // Check whether the user is logged in and return\n    // true or false\n    const user = localStorage.getItem('currentUser');\n    return user === 'true'\n  }\n  \n  // Checks against fake credentials and if correct closes window\n  login(requestedUrl) {\n    if (this.username === 'admin' && this.password === '123') {\n      localStorage.setItem('currentUser', 'true');\n      // ToDO Replace DialogRef with simpler way of login\n      this.router.navigate;\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n\n  // Remove currentUser from localStorage to log out\n  // Afterwards redirect to login\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['login']);\n}\n\n}\n\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}