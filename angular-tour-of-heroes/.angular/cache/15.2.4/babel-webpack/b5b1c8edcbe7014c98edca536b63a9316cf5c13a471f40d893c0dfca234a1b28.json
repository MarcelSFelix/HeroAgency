{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth/auth.service\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"loginPopup\"];\nexport class LoginComponent {\n  constructor(route, router, authService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n  }\n  isLoggedIn() {\n    return this.authService.isAuthenticated();\n  }\n  // Gets 'username' and 'password' of inputs\n  // compares it against credentials\n  onSubmit() {\n    const username = document.getElementsByName('username')[0].value;\n    const password = document.getElementsByName('password')[0].value;\n    this.authService.login(username, password).subscribe(response => {\n      // Set marker that user is logged in\n      localStorage.setItem('loggedIn', 'true');\n      // Redirect the user to previously requested site\n      const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.router.navigateByUrl(returnUrl);\n    }, error => {\n      // Error handling\n      console.error('Login error:', error);\n      // Handle the error and display an appropriate message to the user\n    });\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  viewQuery: function LoginComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loginPopup = _t.first);\n    }\n  },\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"dialog-content\"], [\"id\", \"loginForm\", 3, \"submit\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 4);\n      i0.ɵɵtext(13, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAYA,OAAM,MAAOA,cAAc;EAOzBC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IARrB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAQlB;EAEHC,UAAU;IACR,OAAO,IAAI,CAACD,WAAW,CAACE,eAAe,EAAE;EAC3C;EAEA;EACA;EACAC,QAAQ;IACN,MAAMC,QAAQ,GAAsBC,QAAQ,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,CAACC,KAAK;IACpF,MAAMC,QAAQ,GAAsBH,QAAQ,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,CAACC,KAAK;IACpF,IAAI,CAACP,WAAW,CAACS,KAAK,CAACL,QAAQ,EAAEI,QAAQ,CAAC,CAACE,SAAS,CACjDC,QAAQ,IAAI;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MACxC;MACA,MAAMC,SAAS,GAAG,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;MACrE,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAACH,SAAS,CAAC;IACtC,CAAC,EACAI,KAAK,IAAI;MACR;MACAC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC;IACF,CAAC,CACF;EACH;;;AApCWtB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAwB;EAAAC;IAAA;;;;;;;;;;;;;MCZ3BC,8BAA4B;MACtBA,qBAAK;MAAAA,iBAAK;MACdA,+BAA2C;MAAtBA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACxCD,2BAAK;MACIA,yBAAS;MAAAA,iBAAQ;MACxBA,gCAAmE;MAAhDA;QAAA;MAAA,EAAsB;MAAzCA,iBAAmE;MAErEA,2BAAK;MACIA,0BAAS;MAAAA,iBAAQ;MACxBA,iCAAuE;MAAhDA;QAAA;MAAA,EAAsB;MAA7CA,iBAAuE;MAEzEA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;;;MANfA,eAAsB;MAAtBA,sCAAsB;MAIlBA,eAAsB;MAAtBA,sCAAsB","names":["LoginComponent","constructor","route","router","authService","isLoggedIn","isAuthenticated","onSubmit","username","document","getElementsByName","value","password","login","subscribe","response","localStorage","setItem","returnUrl","snapshot","queryParams","navigateByUrl","error","console","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\HeroAgency\\angular-tour-of-heroes\\src\\app\\login\\login.component.ts","C:\\Users\\marcel-steven.felix\\HeroAgency\\angular-tour-of-heroes\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  \n})\nexport class LoginComponent { \n\n  username: string = '';\n  password: string = '';\n\n  @ViewChild('loginPopup') loginPopup: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  isLoggedIn() {\n    return this.authService.isAuthenticated();\n  }\n\n  // Gets 'username' and 'password' of inputs\n  // compares it against credentials\n  onSubmit() {\n    const username = (<HTMLInputElement>document.getElementsByName('username')[0]).value;\n    const password = (<HTMLInputElement>document.getElementsByName('password')[0]).value;\n    this.authService.login(username, password).subscribe(\n      (response) => {\n        // Set marker that user is logged in\n        localStorage.setItem('loggedIn', 'true')\n        // Redirect the user to previously requested site\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n        this.router.navigateByUrl(returnUrl);\n      },\n      (error) => {\n        // Error handling\n        console.error('Login error:', error);\n        // Handle the error and display an appropriate message to the user\n      }\n    );\n  }\n}","<div class=\"dialog-content\">\n  <h2>Login</h2>\n  <form id=\"loginForm\" (submit)=\"onSubmit()\">\n    <div>\n      <label>Username:</label>\n      <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div>\n      <label>Password:</label>\n      <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}