{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nexport class PopupComponent {\n  constructor(dialogRef) {\n    this.dialogRef = dialogRef;\n    this.loggedIn = new EventEmitter();\n    this.username = \"\";\n    this.password = \"\";\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.username === 'admin' && this.password === 'password') {\n      this.dialogRef.close();\n      // Allow/route user to a site\n    } else {\n      alert('Invalid credentials');\n    }\n    this.loggedIn.emit(success);\n  }\n}\nPopupComponent.ɵfac = function PopupComponent_Factory(t) {\n  return new (t || PopupComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef));\n};\nPopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PopupComponent,\n  selectors: [[\"app-popup\"]],\n  outputs: {\n    loggedIn: \"loggedIn\"\n  },\n  decls: 7,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"name\", \"password\", \"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-button\", \"\", \"type\", \"submit\"]],\n  template: function PopupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PopupComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"mat-form-field\")(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function PopupComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PopupComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i3.MatFormField],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA4BA,YAAY,QAAgB,eAAe;;;;;AAUvE,OAAM,MAAOC,cAAc;EAOzBC,YAAmBC,SAAuC;IAAvC,cAAS,GAATA,SAAS;IALlB,aAAQ,GAAG,IAAIH,YAAY,EAAW;IAEhD,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAEyC;EAE9DI,QAAQ,IACR;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,UAAU,EAAE;MAC7D,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;MACtB;KACD,MAAM;MACLC,KAAK,CAAC,qBAAqB,CAAC;;IAG9B,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;EAC7B;;AArBWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,sCAAgB;MACyBA;QAAA;MAAA,EAAsB;MAA7DA,iBAA8E;MAEhFA,sCAAgB;MACyBA;QAAA;MAAA,EAAsB;MAA7DA,iBAA8F;MAEhGA,iCAAiC;MAAAA,qBAAK;MAAAA,iBAAS;;;MALNA,eAAsB;MAAtBA,sCAAsB;MAGtBA,eAAsB;MAAtBA,sCAAsB","names":["EventEmitter","PopupComponent","constructor","dialogRef","ngOnInit","onSubmit","username","password","close","alert","loggedIn","emit","success","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\popup\\popup.component.ts","C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\popup\\popup.component.html"],"sourcesContent":["import { Component, Inject, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.css']\n})\nexport class PopupComponent {\n\n  @Output() loggedIn = new EventEmitter<boolean>();\n\n  username: string = \"\";\n  password: string = \"\";\n\n  constructor(public dialogRef: MatDialogRef<PopupComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    if (this.username === 'admin' && this.password === 'password') {\n      this.dialogRef.close();\n      // Allow/route user to a site\n    } else {\n      alert('Invalid credentials');\n    }\n    \n    this.loggedIn.emit(success);\n  }\n\n}","<form (ngSubmit)=\"onSubmit()\">\n  <mat-form-field>\n    <input matInput placeholder=\"Username\" [(ngModel)]=\"username\" name=\"username\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\" type=\"password\">\n  </mat-form-field>\n  <button mat-button type=\"submit\">Login</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}