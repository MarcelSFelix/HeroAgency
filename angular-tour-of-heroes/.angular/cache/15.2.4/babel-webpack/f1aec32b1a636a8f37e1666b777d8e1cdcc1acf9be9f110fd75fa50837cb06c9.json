{"ast":null,"code":"import { MatDialogConfig } from \"@angular/material/dialog\";\nimport { PopupComponent } from '../popup/popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/material/dialog\";\nexport class AuthGuardService {\n  constructor(auth, dialog) {\n    this.auth = auth;\n    this.dialog = dialog;\n    this.disableClose = true;\n    this.autoFocus = true;\n    this.data = {\n      id: 1,\n      title: 'Login dialog'\n    };\n    this.dialogRef = this.dialog.open(PopupComponent, dialogConfig);\n  }\n  canActivate() {\n    console.log('entered canActivate()');\n    if (!this.auth.isAuthenticated()) {\n      // To Do return true after dialog closed -> then redirect to requested site\n      this.openDialog();\n      return false;\n    }\n    return true;\n  }\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n    window.addEventListener('message', event => {\n      if (event.origin === window.location.origin && event.data === 'login-success') {\n        popup.close();\n      }\n    });\n  }\n  afterClosed() {}\n  subscribe(result, {\n    console,\n    log\n  }) {}\n}\nAuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.MatDialog));\n};\nAuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuardService,\n  factory: AuthGuardService.ɵfac\n});\n'The dialog was closed';\n;","map":{"version":3,"mappings":"AAIA,SAAmBA,eAAe,QAAO,0BAA0B;AACnE,SAASC,cAAc,QAAQ,0BAA0B;;;;AAGzD,OAAM,MAAOC,gBAAgB;EAC3BC,YAAmBC,IAAiB,EAAUC,MAAiB;IAA5C,SAAI,GAAJD,IAAI;IAAuB,WAAM,GAANC,MAAM;IAqBjC,iBAAY,GAAG,IAAI;IACnB,cAAS,GAAG,IAAI;IAEhB,SAAI,GAAG;MAClBC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACR;IAEK,cAAS,GAAG,IAAI,CAACF,MAAM,CAACG,IAAI,CAACP,cAAc,EAAEQ,YAAY,CAAC;EA7BJ;EAElEC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAI,CAAC,IAAI,CAACR,IAAI,CAACS,eAAe,EAAE,EAAE;MAChC;MACA,IAAI,CAACC,UAAU,EAAE;MACjB,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAEAA,UAAU;IACR,MAAML,YAAY,GAAG,IAAIT,eAAe,EAAE;IAE1Ce,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAI;MAC3C,IAAIA,KAAK,CAACC,MAAM,KAAKH,MAAM,CAACI,QAAQ,CAACD,MAAM,IAAID,KAAK,CAACG,IAAI,KAAK,eAAe,EAAE;QAC7EC,KAAK,CAACC,KAAK,EAAE;;IAAC,CAAC;EAEnB;EAYcC,WAAW,IAAE;EAACC,SAAS,CAACC,MAAM,EAAI;IAC1Cd,OAAO;IAACC;EAAG;;AAjCRV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAwB,SAAhBxB,gBAAgB;AAAA;AAiCP,uBAAuB;AACnC","names":["MatDialogConfig","PopupComponent","AuthGuardService","constructor","auth","dialog","id","title","open","dialogConfig","canActivate","console","log","isAuthenticated","openDialog","window","addEventListener","event","origin","location","data","popup","close","afterClosed","subscribe","result","factory"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\auth\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, CanActivateFn } from '@angular/router';\nimport { AuthService } from './auth.service';\n\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\nimport { PopupComponent } from '../popup/popup.component';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, private dialog: MatDialog) {}\n  \n  canActivate(): boolean {\n    console.log('entered canActivate()');\n    if (!this.auth.isAuthenticated()) {\n      // To Do return true after dialog closed -> then redirect to requested site\n      this.openDialog();\n      return false;\n    }\n    return true;\n  }\n\n  openDialog() {\n    const dialogConfig = new MatDialogConfig();\n\n    window.addEventListener('message', (event) => {\n      if (event.origin === window.location.origin && event.data === 'login-success') {\n        popup.close();)\n        \n    })\n\n        dialogConfig.disableClose = true;\n        dialogConfig.autoFocus = true;\n\n        dialogConfig.data = {\n          id: 1,\n          title: 'Login dialog'\n        };\n\n        const dialogRef = this.dialog.open(PopupComponent, dialogConfig);\n\n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n        });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}