{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\n;\nexport class LoginComponent {\n  constructor(dialogRef) {\n    this.dialogRef = dialogRef;\n    this.username = '';\n    this.password = '';\n  }\n  // Checks against fake credentials and if correct closes window\n  onSubmit() {\n    if (this.username === 'admin' && this.password === 'password') {\n      localStorage.setItem('currentUser', 'true');\n      this.dialogRef.close(true);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"login-popup\"], [3, \"submit\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n      i0.ɵɵtext(6, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 4);\n      i0.ɵɵtext(13, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".login-popup[_ngcontent-%COMP%] {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n  background-color: white;\\r\\n  padding: 40px;\\r\\n  border-radius: 5px;\\r\\n  box-shadow: 0 0 50px rgba(0, 0, 0, 0.3);\\r\\n  z-index: 999;\\r\\n}\\r\\n\\r\\n.login-popup[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.login-popup[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%], .login-popup[_ngcontent-%COMP%]   input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  padding: 0px;\\r\\n  border: 100px;\\r\\n  border-bottom: 1px solid #ccc;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.login-popup[_ngcontent-%COMP%]   button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\r\\n  background-color: #007bff;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  padding: 10px 20px;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQztFQUNoQyx1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix1Q0FBdUM7RUFDdkMsWUFBWTtBQUNkOztBQUVBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtBQUNyQjs7QUFFQTs7RUFFRSxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7RUFDWixhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1wb3B1cCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBwYWRkaW5nOiA0MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3gtc2hhZG93OiAwIDAgNTBweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgei1pbmRleDogOTk5O1xyXG59XHJcblxyXG4ubG9naW4tcG9wdXAgbGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5sb2dpbi1wb3B1cCBpbnB1dFt0eXBlPVwidGV4dFwiXSxcclxuLmxvZ2luLXBvcHVwIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMHB4O1xyXG4gIGJvcmRlcjogMTAwcHg7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmxvZ2luLXBvcHVwIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAEA;AAQA,OAAM,MAAOA,cAAc;EAKzBC,YACSC,SAAuC;IAAvC,cAAS,GAATA,SAAS;IAJlB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAIlB;EAEH;EACAC,QAAQ;IACN,IAAI,IAAI,CAACC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAACC,QAAQ,KAAK,UAAU,EAAE;MAC7DC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC;MAE3C,IAAI,CAACL,SAAS,CAACM,KAAK,CAAC,IAAI,CAAC;KAC3B,MAAM;MACLC,KAAK,CAAC,mCAAmC,CAAC;;EAE9C;;AAlBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAAyB;MACnBA,qBAAK;MAAAA,iBAAK;MAChBA,+BAA4B;MAAtBA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACzBD,2BAAK;MACIA,yBAAS;MAAAA,iBAAQ;MACxBA,gCAAmE;MAAhDA;QAAA;MAAA,EAAsB;MAAzCA,iBAAmE;MAErEA,2BAAK;MACIA,0BAAS;MAAAA,iBAAQ;MACxBA,iCAAuE;MAAhDA;QAAA;MAAA,EAAsB;MAA7CA,iBAAuE;MAEzEA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;;;MANfA,eAAsB;MAAtBA,sCAAsB;MAIlBA,eAAsB;MAAtBA,sCAAsB","names":["LoginComponent","constructor","dialogRef","onSubmit","username","password","localStorage","setItem","close","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.ts","C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  \n})\nexport class LoginComponent { \n\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<LoginComponent>,\n  ) {}\n\n  // Checks against fake credentials and if correct closes window\n  onSubmit() {\n    if (this.username === 'admin' && this.password === 'password') {\n      localStorage.setItem('currentUser', 'true');\n      \n      this.dialogRef.close(true);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  } \n\n}\n\n/* \nCode below is supposed to solve an error message\nbut causes popup not to close and causes further issues\n*/\n\n// Need to provide MatDialogRef in app.module.ts again to go back to work in progress state\n\n/*\nimport { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [\n    { provide: MatDialogRef, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: {} }\n  ]\n  \n})\nexport class LoginComponent { \n\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    @Inject(MatDialogRef) public dialogRef: MatDialogRef<LoginComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  // Checks against fake credentials and if correct closes window\n  onSubmit() {\n    console.log(this.dialogRef)\n    if (this.username === 'admin' && this.password === 'password') {\n      localStorage.setItem('currentUser', 'true');\n      \n      this.dialogRef.close(true);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  } \n\n}\n*/","<div class=\"login-popup\">\n  <h2>Login</h2>\n<form (submit)=\"onSubmit()\">\n  <div>\n    <label>Username:</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required>\n  </div>\n  <div>\n    <label>Password:</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n  </div>\n  <button type=\"submit\">Login</button>\n</form>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}