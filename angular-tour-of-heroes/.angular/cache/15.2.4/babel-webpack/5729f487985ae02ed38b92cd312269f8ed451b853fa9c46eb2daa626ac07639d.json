{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(route, router, authService) {\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n  }\n  ngAfterViewInit() {\n    this.loginPopup.showModal;\n  }\n  // Gets 'username' and 'password' input\n  // Compares it against credentials\n  // Logs user in and closes window and redirects\n  onSubmit() {\n    const username = document.getElementsByName('username')[0].value;\n    const password = document.getElementsByName('password')[0].value;\n    if (username === 'admin' && password === '123') {\n      this.authService.login();\n      this.loginPopup.nativeElement.close();\n      const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.router.navigateByUrl(returnUrl);\n    } else {\n      alert('Username or password is incorrect');\n    }\n  }\n};\n__decorate([ViewChild('loginPopup')], LoginComponent.prototype, \"loginPopup\", void 0);\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAiBC,SAAS,QAAQ,eAAe;AAY5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YACUC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAFxB,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IARrB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;EAQlB;EAEHC,eAAe;IACb,IAAI,CAACC,UAAU,CAACC,SAAS;EAC3B;EAEA;EACA;EACA;EACAC,QAAQ;IACN,MAAMC,QAAQ,GAAsBC,QAAQ,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,CAACC,KAAK;IACpF,MAAMC,QAAQ,GAAsBH,QAAQ,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,CAACC,KAAK;IAEpF,IAAIH,QAAQ,KAAK,OAAO,IAAII,QAAQ,KAAK,KAAK,EAAE;MAC9C,IAAI,CAACT,WAAW,CAACU,KAAK,EAAE;MACxB,IAAI,CAACR,UAAU,CAACS,aAAa,CAACC,KAAK,EAAE;MACrC,MAAMC,SAAS,GAAG,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;MACrE,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAACH,SAAS,CAAC;KACrC,MAAM;MACLI,KAAK,CAAC,mCAAmC,CAAC;;EAI9C;CAED;AA/B0BC,YAAxBvB,SAAS,CAAC,YAAY,CAAC,kDAAiB;AAL9BC,cAAc,eAN1BF,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CAEpC,CAAC,GACWzB,cAAc,CAoC1B;SApCYA,cAAc","names":["Component","ViewChild","LoginComponent","constructor","route","router","authService","ngAfterViewInit","loginPopup","showModal","onSubmit","username","document","getElementsByName","value","password","login","nativeElement","close","returnUrl","snapshot","queryParams","navigateByUrl","alert","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\marcel-steven.felix\\angular-tour-of-heroes\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, AfterViewInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  \n})\nexport class LoginComponent implements AfterViewInit{ \n\n  username: string = '';\n  password: string = '';\n\n  @ViewChild('loginPopup') loginPopup: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n  ) {}\n\n  ngAfterViewInit() {\n    this.loginPopup.showModal\n  }\n\n  // Gets 'username' and 'password' input\n  // Compares it against credentials\n  // Logs user in and closes window and redirects\n  onSubmit() {\n    const username = (<HTMLInputElement>document.getElementsByName('username')[0]).value;\n    const password = (<HTMLInputElement>document.getElementsByName('password')[0]).value;\n    \n    if (username === 'admin' && password === '123') {\n      this.authService.login();\n      this.loginPopup.nativeElement.close();\n      const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.router.navigateByUrl(returnUrl);\n    } else {\n      alert('Username or password is incorrect')\n    }\n    \n    \n  } \n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}